#!/usr/bin/env bash
set -euo pipefail

# ───────────────────────────────────────────────────────────────────
# 1) 스크립트 위치로 이동
#    deploy.sh 파일이 있는 디렉토리(= 프로젝트 루트/infra/script)로 이동
# ───────────────────────────────────────────────────────────────────
cd "$(dirname "$0")"

# ───────────────────────────────────────────────────────────────────
# 2) 최신 코드 가져오기
# ───────────────────────────────────────────────────────────────────
echo "Pull latest code from main"
git pull origin main

# ───────────────────────────────────────────────────────────────────
# 3) Compose 파일이 있는 디렉토리로 이동
#    (infra/docker 아래에 docker-compose.yml 이 있다면)
# ───────────────────────────────────────────────────────────────────
cd ../docker

# ───────────────────────────────────────────────────────────────────
# 4) 기존 컨테이너/네트워크 정리
# ───────────────────────────────────────────────────────────────────
echo "Stopping existing containers"
sudo docker compose down

# ───────────────────────────────────────────────────────────────────
# 5) 이미지 빌드 & 컨테이너 재기동
#    - --build: 새 코드를 반영해 이미지 재빌드
#    - -d     : 백그라운드 모드
# ───────────────────────────────────────────────────────────────────
echo "Building & starting services"
sudo docker compose up -d --build

# ───────────────────────────────────────────────────────────────────
# 6) 헬스 체크 (옵션)
# ───────────────────────────────────────────────────────────────────
echo "Waiting for app to become healthy..."
for i in {1..30}; do
  if curl -sSf http://localhost:8080/actuator/health > /dev/null; then
    echo "✅ App is healthy!"
    exit 0
  fi
  echo "($i/30) still waiting..."
  sleep 1
done

echo "App did not become healthy in time" >&2
exit 1
